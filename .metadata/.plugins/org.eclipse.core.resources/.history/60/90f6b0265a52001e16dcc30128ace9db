package in.ineuron.model;
// Generated 13-Sep-2023, 10:52:43 pm by Hibernate Tools 4.3.6.Final


import javax.ejb.Stateless;
import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;

/**
 * Home object for domain model class Insurancepolicy.
 * @see in.ineuron.model.Insurancepolicy
 * @author Hibernate Tools
 */
@Stateless
public class InsurancepolicyHome {

    private static final Log log = LogFactory.getLog(InsurancepolicyHome.class);

    @PersistenceContext private EntityManager entityManager;
    
    public void persist(Insurancepolicy transientInstance) {
        log.debug("persisting Insurancepolicy instance");
        try {
            entityManager.persist(transientInstance);
            log.debug("persist successful");
        }
        catch (RuntimeException re) {
            log.error("persist failed", re);
            throw re;
        }
    }
    
    public void remove(Insurancepolicy persistentInstance) {
        log.debug("removing Insurancepolicy instance");
        try {
            entityManager.remove(persistentInstance);
            log.debug("remove successful");
        }
        catch (RuntimeException re) {
            log.error("remove failed", re);
            throw re;
        }
    }
    
    public Insurancepolicy merge(Insurancepolicy detachedInstance) {
        log.debug("merging Insurancepolicy instance");
        try {
            Insurancepolicy result = entityManager.merge(detachedInstance);
            log.debug("merge successful");
            return result;
        }
        catch (RuntimeException re) {
            log.error("merge failed", re);
            throw re;
        }
    }
    
    public Insurancepolicy findById( Long id) {
        log.debug("getting Insurancepolicy instance with id: " + id);
        try {
            Insurancepolicy instance = entityManager.find(Insurancepolicy.class, id);
            log.debug("get successful");
            return instance;
        }
        catch (RuntimeException re) {
            log.error("get failed", re);
            throw re;
        }
    }
}

